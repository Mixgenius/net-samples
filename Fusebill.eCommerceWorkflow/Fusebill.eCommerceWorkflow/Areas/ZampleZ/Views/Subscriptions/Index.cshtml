@using Fusebill.ApiWrapper


@model Fusebill.eCommerceWorkflow.Areas.ZampleZ.Models.CustomersAndSubscriptionsVM

@{
    Layout = null;
}
<script src="~/Scripts/jquery-1.8.2.min.js"></script>

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Index</title>
</head>
<body>
    <div>
        <script src="~/Scripts/jquery-1.8.2.js"></script>
        ZampleZ
        <button type="button" onclick="ClickButton()">ClickButton()</button>

        @foreach (var customer in Model.AvailableCustomers)
        {
            <button type="button" onclick="loadSubscriptions(@customer.Id)">
                <p><strong>First name: </strong>@customer.FirstName</p>
                <p><strong>Last name: </strong>@customer.LastName</p>
                <p><strong>Company name: </strong>@customer.CompanyName</p>
                <p><strong>ID: </strong>@customer.Id</p>
            </button>
    <button type="button" onclick="cancelCustomer(@customer.Id)">Cancel customer with ID of @customer.Id</button>
         }

        <button type="button" onclick="reverseCharge(4612017)">Reverse charge for Sevice 7 of Demo Customer 2</button>

    </div>
    <div id="divItems">

    </div>


    <script>
    var house;
    var model ;
    var productQuantityOverridesArray;
    $(document).ready(function () {
        model = @Html.HtmlConvertToJson(Model);

        });


        function ClickButton() {


            house = { Number: 80, Numbers: [12,13,14], NumbersArray: [22,23,24], Name: "StringName" };

            $.ajax({
                type: "POST",
                url: "Subscriptions/PassHouses",
                dataType: "json",traditional: true,
                data: house,
                success: function () {
                    alert("SUccessfull!!!!");
                },
                failure: function (response) {
                    $('#result').html(response);
                }
            });
        }

        function reverseCharge(chargeID)
        {
            var customer = { CustomerID: chargeID};

            $.ajax({
                type: "POST",
                url: "Subscriptions/ReverseCharge",
                dataType: "json",
                data: customer,
                success: function () {
                    alert("Reverse charge applied");
                },
                //error: alert("Darn!")
            });
        }



        function cancelCustomer(id)
        {
            var customer = { CustomerID: id};

            $.ajax({
                type: "POST",
                url: "Subscriptions/CancelCustomer",
                dataType: "json",
                data: customer,
                success: function () {
                    alert("Customer canceled");
                },
                //error: alert("Darn!")
            });
        }



            function loadSubscriptions(id) {

                alert("loadSUbscriptions() called");

                var customer = { CustomerID: id};

                $.ajax({
                    type: "POST",
                    url: "Subscriptions/ListSubscriptionsForCustomer",
                    dataType: "json",
                    data: customer,
                    success: function (data) {

                        returnedData = data;

                        showSubscriptionsInformation(returnedData)
                    },
                    //error: alert("Darn!")
                });
            }




            function showSubscriptionsInformation(returnedData){

                //we use an array to keep the array that stores the product QUantity
                productQuantityOverridesArray = new Array();

                for (var i = 0; i < returnedData.length; i++)
                {
                    //use this
                    var productQuantityOverrides = new Array(returnedData[i].SubscriptionProducts.length);

                    var subscriptionInfo = document.createElement("p");
                    subscriptionInfo.innerHTML = "<strong>Subscription ID</strong> " + returnedData[i].Id + "<br />" +
                        "<strong>Subscription Status</strong> " + returnedData[i].Status + "<br />" +
                        "<strong>Subscription ID</strong> " + returnedData[i].Id + "<br />" +
                                  "<strong>Subscription Name</strong> " + returnedData[i].PlanName + "<br />" +
                                  "<strong>Subscription Description</strong> " + returnedData[i].PlanDescription + "<br />" +
                                  "<strong>Subscription Reference</strong> " + returnedData[i].PlanReference + "<br />" +
                                  "<strong>Subscription Amount</strong>" +  returnedData[i].Amount + "<br />" +
                                  "<strong>Subscription Override</strong> " + returnedData[i].SubsciptionOverride + "<br />" +

                                  "<strong>Subscription Created Date</strong> " +  returnedData[i].Created + "<br />" +
                                  "<strong>Subscription Starttime</strong> " + returnedData[i].ContractStartTimestamp + "<br />" +
                                  "<strong>Subscription Endtime</strong> " + returnedData[i].ContractEndTimestamp + "<br />" +
                                  "<strong>Subscription Scheduled Activation</strong> " + returnedData[i].ScheduledActivationTimestamp + "<br />" +
                                  "<strong>Subscription Remaining Interval</strong> " + returnedData[i].RemainingInterval + "<br />" +

                     "<strong>================ Subscription Products ====================</strong>"

                    /*=============================== SHOW SUBSCRIPTION PRODUCTS ==============*/

                    $("#divItems").append(subscriptionInfo);


                    for (var j = 0; j < returnedData[i].SubscriptionProducts.length; j++)
                    {
                        var subscriptionProductInfo = document.createElement("p");
                        subscriptionProduct = returnedData[i].SubscriptionProducts[j].PlanProduct;
                        subscriptionProductInfo.innerHTML = "<strong>Subscription Product " + j + ": </strong>"  + subscriptionProduct.ProductName + "<br />" +
                                                            + "<strong>Quantity</strong>" + subscriptionProduct.Quantity + "<br />" +
                                                            + "<strong>Id</strong>" + subscriptionProduct.Id + "<br />";

                        $("#divItems").append(subscriptionProductInfo);

                        var editSubscriptionProductQuantityLabel = document.createElement("p");
                        editSubscriptionProductQuantityLabel.innerHTML = "Edit Subscription Product Quantity" + "<br />";
                        $("#divItems").append(editSubscriptionProductQuantityLabel);

                        var editSubscriptionProductQuantity = document.createElement("input");
                    //    editSubscriptionProductQuantity.id = "editSubscriptionProductQuantity_" + subscriptionProduct.ProductName + "_" + returnedData[i].Id;

                        productQuantityOverrides[j] = editSubscriptionProductQuantity;

                        $("#divItems").append(editSubscriptionProductQuantity);
                    }

                    productQuantityOverridesArray[returnedData[i].Id.toString()] = productQuantityOverrides;



                    /* Overrides for subscription name, description, charge amount, and setup amount */
                    var nameOverrideLabel = document.createElement("p");
                    nameOverrideLabel.innerHTML = "Override Name"  + "<br />";
                    $("#divItems").append(nameOverrideLabel);
                    var nameOverride = document.createElement("input");
                    nameOverride.id = "nameOverride_" + returnedData[i].Id;
                    $("#divItems").append(nameOverride);

                    var descriptionOverrideLabel = document.createElement("p");
                    descriptionOverrideLabel.innerHTML = "Override Description" + "<br />";
                    $("#divItems").append(descriptionOverrideLabel);
                    var descriptionOverride = document.createElement("input");
                    descriptionOverride.id = "descriptionOverride_" + returnedData[i].Id;
                    $("#divItems").append(descriptionOverride);

                    var chargeOverrideLabel = document.createElement("p");
                    chargeOverrideLabel.innerHTML = "Override Charge" + "<br />";
                    $("#divItems").append(chargeOverrideLabel);
                    var chargeOverride = document.createElement("input");
                    chargeOverride.id = "chargeOverride_" + returnedData[i].Id;
                    $("#divItems").append(chargeOverride);

                    var setupOverrideLabel = document.createElement("p");
                    setupOverrideLabel.innerHTML = "Override Setup" + "<br />";
                    $("#divItems").append(setupOverrideLabel);
                    var setupOverride = document.createElement("input");
                    setupOverride.id = "setupOverride_" + returnedData[i].Id;
                    $("#divItems").append(setupOverride);


                    /* Edit reference, contract start and end dates, scheduled activation date, remaining interval.  */

                    var referenceLabel = document.createElement("p");
                    referenceLabel.innerHTML = " Reference" + "<br />";
                    $("#divItems").append(referenceLabel);
                    var reference = document.createElement("input");
                    reference.id = "reference_" + returnedData[i].Id;
                    $("#divItems").append(reference);

                    var ContractStartTimestampLabel = document.createElement("p");
                    ContractStartTimestampLabel.innerHTML = " Contract Start Date" + "<br />";
                    $("#divItems").append(ContractStartTimestampLabel);
                    var ContractStartTimestamp = document.createElement("input");
                    ContractStartTimestamp.id = "contractStartTimestamp_" + returnedData[i].Id;
                    $("#divItems").append(ContractStartTimestamp);

                    var ContractEndTimestampLabel = document.createElement("p");
                    ContractEndTimestampLabel.innerHTML = " Contract End Date" + "<br />";
                    $("#divItems").append(ContractEndTimestampLabel);
                    var ContractEndTimestamp = document.createElement("input");
                    ContractEndTimestamp.id = "contractEndTimestamp_" + returnedData[i].Id;
                    $("#divItems").append(ContractEndTimestamp);

                    var ScheduledActivationTimestampLabel = document.createElement("p");
                    ScheduledActivationTimestampLabel.innerHTML = " Scheduled Activation Timestamp" + "<br />";
                    $("#divItems").append(ScheduledActivationTimestampLabel);
                    var ScheduledActivationTimestamp = document.createElement("input");
                    ScheduledActivationTimestamp.id = "scheduledActivationTimestamp_" + returnedData[i].Id;
                    $("#divItems").append(ScheduledActivationTimestamp);

                    var RemainingIntervalLabel = document.createElement("p");
                    RemainingIntervalLabel.innerHTML = " Remaining Interval" + "<br />";
                    $("#divItems").append(RemainingIntervalLabel);
                    var RemainingInterval = document.createElement("input");
                    RemainingInterval.id = "remainingInterval_" + returnedData[i].Id;
                    $("#divItems").append(RemainingInterval);



                    /*================================ ADD SUBSCRIPTIONS / PLANS ==========================*/

                    for (var k = 0; k < @Model.AvailablePlans.Count; k++)
            {
                var button = document.createElement("button");
                button.innerHTML = "Add this subscription: " + model.AvailablePlans[k].name;
                button.id = "AddSubscription_" + model.AvailablePlans[k].name + "_" + returnedData[i].Id;
                $("#divItems").append(button);

            }



            var updateButton = document.createElement("button");
            updateButton.innerHTML =  returnedData[i].Id;
            updateButton.id = "UpdateButton_" + returnedData[i].Id;

            $("#divItems").append(updateButton);

            $("#UpdateButton_" + returnedData[i].Id).on("click", function() {
                onUpdateButton(this.innerHTML);
                console.log("update was clicked by " + this.id);
            });


        }
    }

    function onUpdateButton(subID)
    {
        //determine the values in each of the product quantity fields, which are stored in an array


        //this array stores the numerical values of the product overrides arrays' inputs \s
        var productQuantityOverridesValues = new Array();

        //place inputs into the numerical array
        for (var i = 0; i < productQuantityOverridesArray[subID.toString()].length; i++)
        {
            productQuantityOverridesValues[i] = productQuantityOverridesArray[subID.toString()][i].value;
        }


        var postSubscription = {
            SubscriptionID :subID ,
            NameOverride : $("#nameOverride_" +subID).val() ,
            DescriptionOverride : $("#descriptionOverride_" + subID).val(),
            ChargeOverride : $("#chargeOverride_" + subID).val() ,
            SetupOverride : $("#setupOverride_" + subID).val() ,
            Reference : $("#reference_" + subID).val(),
            ContractStartTimestamp : $("#contractStartTimestamp_" + subID).val() ,
            ContractEndTimestamp : $("#contractEndTimestamp_" + subID).val() ,
            ScheduledActivationTimestamp : $("#scheduledActivationTimestamp_" + subID).val(),
            RemainingInterval : $("#remainingInterval_" + subID).val(),
            ProductQuantityOverride : productQuantityOverridesValues
        };

        alert("onUpdateButton has been called");

        $.ajax( {
            // contentType: 'application/json; charset=utf-8',
            dataType : 'json',
            type: "POST",
            traditional: true,
            url: "Subscriptions/UpdateSubscription",
            data: postSubscription,
            success: function() {
                alert("The update button has successfully posted data to the server!!! WHOOO!!"); }
        });
    }

    </script>

        </body>
        </html>

