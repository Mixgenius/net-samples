@using Fusebill.ApiWrapper

@model Fusebill.eCommerceWorkflow.Models.RegistrationVM

@{
    ViewBag.Title = "Step3GetCustomerInformation";
}

<script src="~/Scripts/jquery-1.8.2.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>


<link href="~/Content/Plan.css" rel="stylesheet" />

<h1 style="margin-top: 200px; text-align:center">Step 3: Enter customer information</h1>

<form action="" method="post">
    <table class="customerTable">
        <tr>
            <td>
                <h1>Customer information</h1>
                <div class="customerCustomerInfo">
                    @Html.Label("First Name:")
                    @Html.TextBox("hi")
                    @*    @Html.TextBoxFor(m => m.customerInformation.FirstName, new { @Value = Model.customerInformation.FirstName, @placeholder = "First name" }) *@
                    @Html.Label("Last Name:")
                    @Html.TextBox("hi")
                    @Html.Label("Filler Name:")
                    @Html.TextBox("hi")
                    @*   @Html.TextBoxFor(m => m.customerInformation.LastName, new { @Value = Model.customerInformation.LastName, @placeholder = "Last name" }) *@
                    @*
            @Html.Label("Title:")
            @Html.TextBoxFor(m => m.customerInformation.Title, new { @Value = Model.customerInformation.Title, @placeholder = "Title (eg, Mrs.)" })

            @Html.Label("Email Address:")
            @Html.TextBoxFor(m => m.customerInformation.PrimaryEmail, new { @Value = Model.customerInformation.PrimaryEmail, @placeholder = "example@email.com" })

            @Html.Label("Phone:")
            @Html.TextBoxFor(m => m.customerInformation.PrimaryPhone, new { @Value = Model.customerInformation.PrimaryPhone, @placeholder = "(XXX) XXX-XXXX" })

            @Html.Label("Company Name:")
            @Html.TextBoxFor(m => m.customerInformation.CompanyName, new { @Value = Model.customerInformation.CompanyName, @placeholder = "Company Name" })
                    *@
                </div>
            </td>
            <td class="customerBetweenColumnSpace"></td>
            <td style="vertical-align:top;">
                    <h1>Billing information</h1>
                <div class="customerBillingInfo">
                    @Html.Label("Company Name:")
                    @Html.TextBox("hi")
                    @*   @Html.TextBoxFor(m => m.billingAddress.CompanyName)  *@
                    @Html.Label("Primary Address:")
                    @Html.TextBox("hi")
                    @*    @Html.TextBoxFor(m => m.billingAddress.Line1)*@
                    @Html.DropDownList("hi", Enumerable.Empty<SelectListItem>())
                    @*
            @Html.Label("Secondary Address:")
            @Html.TextBoxFor(m => m.billingAddress.Line2)

            @Html.Label("City:")
            @Html.TextBoxFor(m => m.billingAddress.City)

            @Html.Label("Postal Code:")
            @Html.TextBoxFor(m => m.billingAddress.PostalZip)


            @Html.Label("Country:")
            @Html.DropDownListFor(m => m.billingAddress.CountryId, Model.listOfCountriesSLI, "Select your country", new { @class = "country" })



            @Html.Label("State:")
            @Html.DropDownListFor(m => m.billingAddress.StateId, Enumerable.Empty<SelectListItem>(), "Select your state", new { @class = "state" })


                    *@
                </div>
            </td>
        </tr>
    </table>
   
     
    <input type="submit" value="Back" name="action:Step2GetPlanProducts" />

          <input type="submit" value="To Subscription" name="action:Step4GetInvoice" />

      </form>

<script>
    $(document).ready(function () {

        var model = @Html.HtmlConvertToJson(Model);

        $(".state").prop("disabled", true);
        $(".country").change(
        function () {
            $(".state").prop("disabled", false);

            //the value of the selcted country
            var selectedCountryValue = $(".country").val();
            var selectedCountryCountry;

            //we find the selected country's position in the countries list in order to access its states
            for (var i = 0; i < model.listOfCountriesCountry.length; i++)
            {
                $('#testPara').css('background-color', 'blue');

                if (selectedCountryValue == model.listOfCountriesCountry[i].id)
                {
                    var selectedCountryCountry= model.listOfCountriesCountry[i];
                }
            }
             
            $(".state").empty();

            for (var i = 0; i < selectedCountryCountry.states.length; i++) {
                $(".state").append($('<option>', {
                    value: selectedCountryCountry.states[i].id,
                  text: selectedCountryCountry.states[i].name

                }));
            };



        });

    });
</script>
