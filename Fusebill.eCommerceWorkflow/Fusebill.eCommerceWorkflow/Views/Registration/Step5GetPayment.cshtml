@using Fusebill.ApiWrapper

@model Fusebill.eCommerceWorkflow.Models.RegistrationVM

@{
    ViewBag.Title = "Step5GetPayment";
}

<script src="~/Scripts/jquery-1.8.2.min.js"></script>

<link href="~/Content/Plan.css" rel="stylesheet" />
<h1 style="margin-top: 200px; text-align:center">Step 5/5: Enter billing information</h1>


<body>
    <div class="paymentTable">
        <form action="" method="post">

            <br />
            <br />
            <label>Card Number</label>
            @*@Html.DropDownListFor(m => m.creditCardNumber, Model.listOfCreditCards, "Select your card")*@

            <label>CVV</label>
            @Html.TextBoxFor(m => m.cvv, new { @placeholder = "XXX" })


            @if (Model.sameAsBilling)
            {
                <label>First Name: @Model.customerInformation.FirstName</label>
                <label>Last Name: @Model.customerInformation.LastName</label>
                <label>Primary Address: @Model.shippingAddress.Line1</label>
                <label>Secondary Address: @Model.shippingAddress.Line2</label>
                <label>Postal Code: @Model.shippingAddress.PostalZip</label>

                <label>Country: @Model.shippingAddress.Country</label>
                <label>State: @Model.shippingAddress.State</label>
                <label>City: @Model.shippingAddress.City</label>
            }

            @if (!Model.sameAsBilling)
            {
                <label>First Name</label>
                @Html.ValidationMessageFor(m => m.customerInformation.FirstName)    <br />
                @Html.TextBoxFor(m => m.customerInformation.FirstName, new { @placeholder = "First name" })

                <label>Last Name</label>
                @Html.ValidationMessageFor(m => m.customerInformation.LastName) <br />
                @Html.TextBoxFor(m => m.customerInformation.LastName, new { @placeholder = "Last name" })

                <label>Primary Address</label>
                @Html.ValidationMessageFor(m => m.shippingAddress.Line1)    <br />
                @Html.TextBoxFor(m => m.shippingAddress.Line1, new { @placeholder = "Primary Address" })

                <label>Secondary Address</label>
                @Html.ValidationMessageFor(m => m.shippingAddress.Line2)    <br />
                @Html.TextBoxFor(m => m.shippingAddress.Line2, new { @placeholder = "Secondary Address" })

                <label>Zip</label>
                @Html.ValidationMessageFor(m => m.shippingAddress.PostalZip)    <br />
                @Html.TextBoxFor(m => m.shippingAddress.PostalZip, new { @placeholder = "Zip Code" })


                <label>City</label>
                @Html.ValidationMessageFor(m => m.shippingAddress.City) <br />
                @Html.TextBoxFor(m => m.shippingAddress.City, new { @placeholder = "City" })

                @Html.Label("Country:")
                @Html.ValidationMessageFor(m => m.shippingAddress.CountryId)    <br />
                @Html.DropDownListFor(m => m.shippingAddress.CountryId, Model.listOfCountriesSLI, "Select your country", new { @class = "country" })

                @Html.Label("State:")   
                @Html.ValidationMessageFor(m => m.shippingAddress.StateId)  <br />
                @Html.DropDownListFor(m => m.shippingAddress.StateId, Enumerable.Empty<SelectListItem>(), "Select your state", new { @class = "state" })

                
            }

            <br />
            <br />


            <input type="submit" value="Back" name="action:Step4GetInvoice">
            <input type="submit" value="Submit Card" name="action:Step6GetActivation">
        </form>
    </div>
</body>

<script>
    $(document).ready(function () {

        var model = @Html.HtmlConvertToJson(Model);


        $(".country").change(
        
            function () {
                $(".state").prop("disabled", false);

                //the value of the selcted country
                var selectedCountryValue = $(".country").val();

                //we find the selected country's position in the countries list in order to access its states
                for (var i = 0; i < model.listOfCountriesCountry.length; i++)
                {
                    if (selectedCountryValue == model.listOfCountriesCountry[i].id)
                    {
                        var selectedCountryCountry = model.listOfCountriesCountry[i];
                        $(".countryName").text(selectedCountryCountry);
                    }
                }

                $(".state").empty();

                for (var i = 0; i < selectedCountryCountry.states.length; i++) {
                    $(".state").append($('<option>', {
                        value: selectedCountryCountry.states[i].id,
                        text: selectedCountryCountry.states[i].name

                    }));
                };
            });

        

    });
</script>
